viewing a diff between the two versions of the file highlighted where the versions had been changed, making it easier to locate an accidental bug due to misspellings.
Having access to the entire history of a file makes comparing files and locating bugs much easier. If you had something working at one point in time and then later it wasn't working, you can easily find when and where you changed the program and made the error.
When you can manually chose when to save your document, you can break down your changes into more logical commits, which makes it easier in the long run to see what edits were made. When a program automatically saves your code, it doesn't always make logical sense, making it more difficult to debug and edit later on.
Some version control systems like Git are able to read more than one type of editor (text, different forms of files) while some systems like Google Docs can only read certain types of files at specific times. Because Git can read more than one type of file at a time, it is able to allow saving multiple files in one commit. 
git log prints all of the commits that have been made to a specific file, while git diff compares two commits to find what is different between the two.
If you use version control, you know that you can always "undo" the changes you make, so you can take more risks in changing things, knowing that you have this "saftey net" to fall back on. 
I think I want to try using Git to make a game. I could try and recreate and improve my pig game from scratch but try and take more risks to make it cooler, knowing that I can rely on my commits if I make a mistake.